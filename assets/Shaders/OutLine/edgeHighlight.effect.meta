{
  "ver": "1.0.23",
  "uuid": "a271ef65-b74d-4095-a9fd-f94ef6579bc4",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\n\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision lowp float;\n\nvarying vec4 v_color;\n\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform vec4 hightlightColor;\nuniform vec2 textureSize;\nuniform float radius;\n\n#endif\n\nvec4 getColorFromTexture(sampler2D texture,vec2 uv){\n    vec4 color=vec4(0,1,0,1);\n\n    color = texture2D(texture, uv);\n    return color;\n}\n\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n\n  float unitWidth=1.0/textureSize.x;\n\n  float unitHeight=1.0/textureSize.y;\n\n  float width=radius*unitWidth;\n\n  float height=radius*unitHeight;\n\n  float perCol = 0.0;\n  bool haveFish = false;\n  bool haveBig = false;\n  bool haveSmall = false;\n  float angle=0.0;\n\n  float maxAlpha=0.0;\n\n  for(int i=0;i<180;i++){\n      angle+=1.0/float(180)*2.0*3.14159265359;\n\n      vec2 testPoint_uv=vec2(width*cos(angle),height*sin(angle));\n\n      testPoint_uv=clamp(v_uv0+testPoint_uv,vec2(0,0),vec2(1,1));\n\n      float tempAlpha=getColorFromTexture(texture,testPoint_uv).a;\n\n      maxAlpha=max(maxAlpha,tempAlpha);\n\n      if(!haveFish && maxAlpha > 0.99){\n        haveFish = true;\n        perCol = sin(angle);\n      }\n      if(maxAlpha == 1.0){\n        haveBig = true;\n      }\n      if(maxAlpha == 0.0){\n        haveSmall = true;\n      }\n  }\n  if(!(haveBig && haveSmall)){\n    perCol = 1.0;\n  }\n\n  vec4 finalColor=mix(vec4(0.0),hightlightColor,maxAlpha);\n\n  o=getColorFromTexture(texture,v_uv0);\n\n  o*=v_color;\n\n  vec4 tmpCol = mix(finalColor,o,o.a);\n  vec4 resCol = vec4(tmpCol.r, tmpCol.g, tmpCol.b, tmpCol.a*perCol);\n\n  gl_FragColor = resCol;\n\n}\n"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n\n  vec4 cc_screenSize;\n\n  vec4 cc_screenScale;\n\n  vec4 cc_nativeSize;\n\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n\n  vec4 cc_exposure;\n\n  vec4 cc_mainLitDir;\n\n  vec4 cc_mainLitColor;\n\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\n\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision lowp float;\n\nin vec4 v_color;\n\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform myUniform{\n  vec4 hightlightColor;\n  vec2 textureSize;\n  float radius;\n};\n#endif\n\nvec4 getColorFromTexture(sampler2D texture,vec2 uv){\n    vec4 color=vec4(0,1,0,1);\n\n    color = texture(texture, uv);\n    return color;\n}\n\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n\n  float unitWidth=1.0/textureSize.x;\n\n  float unitHeight=1.0/textureSize.y;\n\n  float width=radius*unitWidth;\n\n  float height=radius*unitHeight;\n\n  float perCol = 0.0;\n  bool haveFish = false;\n  bool haveBig = false;\n  bool haveSmall = false;\n  float angle=0.0;\n\n  float maxAlpha=0.0;\n\n  for(int i=0;i<180;i++){\n      angle+=1.0/float(180)*2.0*3.14159265359;\n\n      vec2 testPoint_uv=vec2(width*cos(angle),height*sin(angle));\n\n      testPoint_uv=clamp(v_uv0+testPoint_uv,vec2(0,0),vec2(1,1));\n\n      float tempAlpha=getColorFromTexture(texture,testPoint_uv).a;\n\n      maxAlpha=max(maxAlpha,tempAlpha);\n\n      if(!haveFish && maxAlpha > 0.99){\n        haveFish = true;\n        perCol = sin(angle);\n      }\n      if(maxAlpha == 1.0){\n        haveBig = true;\n      }\n      if(maxAlpha == 0.0){\n        haveSmall = true;\n      }\n  }\n  if(!(haveBig && haveSmall)){\n    perCol = 1.0;\n  }\n\n  vec4 finalColor=mix(vec4(0.0),hightlightColor,maxAlpha);\n\n  o=getColorFromTexture(texture,v_uv0);\n\n  o*=v_color;\n\n  vec4 tmpCol = mix(finalColor,o,o.a);\n  vec4 resCol = vec4(tmpCol.r, tmpCol.g, tmpCol.b, tmpCol.a*perCol);\n\n  gl_FragColor = resCol;\n\n}\n"
      }
    }
  ],
  "subMetas": {}
}